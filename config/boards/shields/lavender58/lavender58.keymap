/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
&kp RA(RBKT) &kp N1   &kp N2   &kp N3 &kp N4    &kp N5                  &kp N6  &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
&kp TAB      &kp Q    &kp W    &kp E  &kp R     &kp T                   &kp Y   &kp U    &kp I     &kp O    &kp P    &kp LBKT
&kp LCTRL    &kp A    &kp S    &kp D  &kp F     &kp G                   &kp H   &kp J    &kp K     &kp L    &kp SEMI &kp SINGLE_QUOTE
&kp LSHFT    &kp Z    &kp X    &kp C  &kp V     &kp B                   &kp N   &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RALT
             &kp LWIN &kp LALT &mo 1  &kp SPACE &kp ESC                 &kp RET &kp BSPC &mo 2     &kp DARW &kp UARW
			>;
		};

		num_layer {
			bindings = <
&trans &trans &trans  &trans &trans &trans               &trans &trans  &trans &trans &trans &trans
&trans &kp N6 &kp N7  &kp N8 &kp N9 &kp N0               &trans &trans  &trans &trans &trans &trans
&trans &kp F1 &kp F2  &kp F3 &kp F4 &kp F5               &trans &trans  &trans &trans &trans &trans
&trans &kp F6 &kp F7  &kp F8 &kp F9 &kp F10              &trans &trans  &trans &trans &trans &trans
       &trans &trans  &none  &trans &trans               &trans &kp DEL &mo 3  &trans &trans
			>;
		};

		symb_layer {
			bindings = <
&trans  &trans          &trans &trans &trans &trans                    &trans &trans     &trans        &trans     &trans        &kp RA(NON_US_BSLH)
&trans  &trans          &trans &trans &trans &trans                    &trans &kp EQUAL  &kp LS(EQUAL) &kp GRAV   &kp LS(RBKT)  &kp RBKT
&trans  &trans          &trans &trans &trans &trans                    &trans &kp RA(N8) &kp RA(N9)    &kp RA(N7) &kp RA(N0)    &kp NON_US_HASH
&trans  &kp NON_US_BSLH &trans &trans &trans &trans                    &trans &kp LS(N8) &kp LS(N9)    &kp LS(N7) &kp RA(MINUS) &trans
        &trans          &trans &mo 3  &trans &trans                    &trans &trans     &none         &kp LARW   &kp RARW
			>;
		};

		bt_layer {
			bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &kp K_PP   &kp K_PREV &kp K_NEXT &trans &trans &trans
&trans     &trans       &trans       &trans       &trans       &trans             &kp M_MUTE &kp M_VOLD &kp M_VOLU &trans &trans &trans
&trans     &trans       &trans       &trans       &trans       &trans             &trans     &trans     &trans     &trans &trans &trans
&trans     &trans       &trans       &trans       &trans       &trans             &trans     &trans     &trans     &trans &trans &trans
           &trans       &trans       &none        &trans       &trans             &trans     &trans     &none      &trans &trans
			>;
		};

	};
};
